@page "/"

@using Booliba.Data
@using System.Globalization
@inject BoolibaService BoolibaService

<div class="container-fluid">

    <h1>My work reports</h1>

    @if (workReports == null)
    {
        <p><em>Loading...</em></p>
    }
    else
    {
        @foreach (var workReport in workReports)
        {
            <div class="card">
                <div class="card-header">
                    @(workReport.Name) (@workReport.TotalDayCount)
                </div>
                <div class="card-body">
                    @foreach (var yearDays in workReport.DaysPerYear)
                    {
                        <p class="card-text">@yearDays.Key</p>
                        <table class="table">
                            <tbody>
                                @foreach (var months in yearDays.GroupBy(d => d.Month))
                                {
                                    <tr>
                                        <th>@CultureInfo.CurrentCulture.DateTimeFormat.GetAbbreviatedMonthName(months.Key)</th>
                                        <table class="table table-sm">
                                            <thead class="thead-light">
                                                @{
                                                    var monthDays = GetMonthDays(yearDays.Key, months.Key);
                                                }
                                                <tr>
                                                    @foreach (var day in monthDays)
                                                    {
                                                        <th class="@(OnWeekEnd(day.DayOfWeek))">
                                                            <button type="button" class="btn btn-sm btn-block text-center px-0" @onclick="() => workReport.Switch(day)"><small>@day.ToString("ddd")</small></button>
                                                        </th>
                                                    }
                                                </tr>
                                                <tr>
                                                    @foreach (var day in monthDays)
                                                    {
                                                        <th class="@(OnWeekEnd(day.DayOfWeek))">
                                                            <button type="button" class="btn btn-sm btn-block text-center px-0" @onclick="() => workReport.Switch(day)"><small>@day.Day</small></button>
                                                        </th>
                                                    }
                                                </tr>
                                            </thead>
                                            <tbody>
                                                <tr>
                                                    @foreach (var day in monthDays)
                                                    {
                                                        <td class="@(months.Contains(day) ? "table-primary" : "table-default")"><div style="min-height: 25px" /></td>
                                                    }
                                                </tr>
                                            </tbody>
                                        </table>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    }
                </div>
            </div>
        }
    }
</div>
@code {
    private DisplayWorkReportViewModel[]? workReports = null;

    protected override async Task OnInitializedAsync()
    {
        workReports = (await BoolibaService.GetWorkReports())
        .Select(wr => new DisplayWorkReportViewModel(BoolibaService, wr.Id, wr.Name, wr.Days))
        .ToArray();
    }

    private IEnumerable<DateOnly> GetMonthDays(int year, int month)
    {
        return Enumerable.Range(1, DateTime.DaysInMonth(year, month))
            .Select(dayNumber => new DateOnly(year, month, dayNumber));
    }

    private string OnWeekEnd(DayOfWeek dayOfWeek) =>
        new[] { DayOfWeek.Saturday, DayOfWeek.Sunday }.Contains(dayOfWeek) ? "text-light bg-secondary" : string.Empty;
}
